{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPT,EAAKM,KAAKW,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAEC,iBAOF,IALA,IAAMlB,EAAamB,SAASpB,EAAKC,WAAWoB,OACtCC,EAAOF,SAASpB,EAAKI,UAAUiB,OAC/BhB,EAASe,SAASpB,EAAKK,OAAOgB,OAChCE,EAAQ,KAEHC,EAAI,EAAGA,GAAKnB,EAAQmB,GAAK,EACtB,IAANA,EACFD,EAAQtB,EAERsB,GAASD,EAGXf,EAAciB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBX,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nrefs.form.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(e) {\n  e.preventDefault();\n\n  const firstDelay = parseInt(refs.firstDelay.value);\n  const step = parseInt(refs.delayStep.value);\n  const amount = parseInt(refs.amount.value);\n  let delay = null;\n\n  for (let i = 1; i <= amount; i += 1) {\n    if (i === 1) {\n      delay = firstDelay;\n    } else {\n      delay += step;\n    }\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelay","document","querySelector","delayStep","amount","form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","parseInt","value","step","delay1","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f43f7316.js.map"}